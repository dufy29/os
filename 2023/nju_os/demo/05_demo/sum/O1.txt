
./a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <printf@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <__assert_fail@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <__assert_fail@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <pthread_create@plt>:
    1050:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4010 <pthread_create@GLIBC_2.34>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <pthread_join@plt>:
    1060:	ff 25 b2 2f 00 00    	jmp    *0x2fb2(%rip)        # 4018 <pthread_join@GLIBC_2.34>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .text:

0000000000001070 <_start>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	31 ed                	xor    %ebp,%ebp
    1076:	49 89 d1             	mov    %rdx,%r9
    1079:	5e                   	pop    %rsi
    107a:	48 89 e2             	mov    %rsp,%rdx
    107d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1081:	50                   	push   %rax
    1082:	54                   	push   %rsp
    1083:	45 31 c0             	xor    %r8d,%r8d
    1086:	31 c9                	xor    %ecx,%ecx
    1088:	48 8d 3d f3 01 00 00 	lea    0x1f3(%rip),%rdi        # 1282 <main>
    108f:	ff 15 2b 2f 00 00    	call   *0x2f2b(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1095:	f4                   	hlt
    1096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    109d:	00 00 00 
    10a0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4038 <__TMC_END__>
    10a7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4038 <__TMC_END__>
    10ae:	48 39 f8             	cmp    %rdi,%rax
    10b1:	74 15                	je     10c8 <_start+0x58>
    10b3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10ba:	48 85 c0             	test   %rax,%rax
    10bd:	74 09                	je     10c8 <_start+0x58>
    10bf:	ff e0                	jmp    *%rax
    10c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10c8:	c3                   	ret
    10c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4038 <__TMC_END__>
    10d7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4038 <__TMC_END__>
    10de:	48 29 fe             	sub    %rdi,%rsi
    10e1:	48 89 f0             	mov    %rsi,%rax
    10e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10e8:	48 c1 f8 03          	sar    $0x3,%rax
    10ec:	48 01 c6             	add    %rax,%rsi
    10ef:	48 d1 fe             	sar    $1,%rsi
    10f2:	74 14                	je     1108 <_start+0x98>
    10f4:	48 8b 05 dd 2e 00 00 	mov    0x2edd(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10fb:	48 85 c0             	test   %rax,%rax
    10fe:	74 08                	je     1108 <_start+0x98>
    1100:	ff e0                	jmp    *%rax
    1102:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1108:	c3                   	ret
    1109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1110:	f3 0f 1e fa          	endbr64
    1114:	80 3d 25 2f 00 00 00 	cmpb   $0x0,0x2f25(%rip)        # 4040 <__bss_start>
    111b:	75 33                	jne    1150 <_start+0xe0>
    111d:	55                   	push   %rbp
    111e:	48 83 3d ba 2e 00 00 	cmpq   $0x0,0x2eba(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1125:	00 
    1126:	48 89 e5             	mov    %rsp,%rbp
    1129:	74 0d                	je     1138 <_start+0xc8>
    112b:	48 8b 3d f6 2e 00 00 	mov    0x2ef6(%rip),%rdi        # 4028 <__dso_handle>
    1132:	ff 15 a8 2e 00 00    	call   *0x2ea8(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1138:	e8 63 ff ff ff       	call   10a0 <_start+0x30>
    113d:	c6 05 fc 2e 00 00 01 	movb   $0x1,0x2efc(%rip)        # 4040 <__bss_start>
    1144:	5d                   	pop    %rbp
    1145:	c3                   	ret
    1146:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    114d:	00 00 00 
    1150:	c3                   	ret
    1151:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1158:	00 00 00 00 
    115c:	0f 1f 40 00          	nopl   0x0(%rax)
    1160:	f3 0f 1e fa          	endbr64
    1164:	e9 67 ff ff ff       	jmp    10d0 <_start+0x60>

0000000000001169 <wrapper>:
    1169:	48 83 ec 08          	sub    $0x8,%rsp
    116d:	48 89 f8             	mov    %rdi,%rax
    1170:	8b 3f                	mov    (%rdi),%edi
    1172:	ff 50 10             	call   *0x10(%rax)
    1175:	b8 00 00 00 00       	mov    $0x0,%eax
    117a:	48 83 c4 08          	add    $0x8,%rsp
    117e:	c3                   	ret

000000000000117f <Tsum>:
    117f:	48 8b 15 da 2e 00 00 	mov    0x2eda(%rip),%rdx        # 4060 <sum>
    1186:	48 8d 42 01          	lea    0x1(%rdx),%rax
    118a:	48 81 c2 01 e1 f5 05 	add    $0x5f5e101,%rdx
    1191:	48 89 c1             	mov    %rax,%rcx
    1194:	48 83 c0 01          	add    $0x1,%rax
    1198:	48 39 d0             	cmp    %rdx,%rax
    119b:	75 f4                	jne    1191 <Tsum+0x12>
    119d:	48 89 0d bc 2e 00 00 	mov    %rcx,0x2ebc(%rip)        # 4060 <sum>
    11a4:	c3                   	ret

00000000000011a5 <create>:
    11a5:	48 83 ec 08          	sub    $0x8,%rsp
    11a9:	48 8b 15 80 2e 00 00 	mov    0x2e80(%rip),%rdx        # 4030 <tptr>
    11b0:	48 8d 0d c9 2e 00 00 	lea    0x2ec9(%rip),%rcx        # 4080 <tpool>
    11b7:	48 89 d0             	mov    %rdx,%rax
    11ba:	48 29 c8             	sub    %rcx,%rax
    11bd:	48 3d e8 05 00 00    	cmp    $0x5e8,%rax
    11c3:	7f 4a                	jg     120f <create+0x6a>
    11c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    11c9:	0f 11 02             	movups %xmm0,(%rdx)
    11cc:	48 c1 f8 03          	sar    $0x3,%rax
    11d0:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax
    11d6:	8d 40 01             	lea    0x1(%rax),%eax
    11d9:	89 02                	mov    %eax,(%rdx)
    11db:	c7 42 04 01 00 00 00 	movl   $0x1,0x4(%rdx)
    11e2:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    11e6:	48 8b 0d 43 2e 00 00 	mov    0x2e43(%rip),%rcx        # 4030 <tptr>
    11ed:	48 8d 79 08          	lea    0x8(%rcx),%rdi
    11f1:	48 8d 15 71 ff ff ff 	lea    -0x8f(%rip),%rdx        # 1169 <wrapper>
    11f8:	be 00 00 00 00       	mov    $0x0,%esi
    11fd:	e8 4e fe ff ff       	call   1050 <pthread_create@plt>
    1202:	48 83 05 26 2e 00 00 	addq   $0x18,0x2e26(%rip)        # 4030 <tptr>
    1209:	18 
    120a:	48 83 c4 08          	add    $0x8,%rsp
    120e:	c3                   	ret
    120f:	48 8d 0d 19 0e 00 00 	lea    0xe19(%rip),%rcx        # 202f <__PRETTY_FUNCTION__.0>
    1216:	ba 1e 00 00 00       	mov    $0x1e,%edx
    121b:	48 8d 35 e2 0d 00 00 	lea    0xde2(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    1222:	48 8d 3d e4 0d 00 00 	lea    0xde4(%rip),%rdi        # 200d <_IO_stdin_used+0xd>
    1229:	e8 12 fe ff ff       	call   1040 <__assert_fail@plt>

000000000000122e <join>:
    122e:	55                   	push   %rbp
    122f:	53                   	push   %rbx
    1230:	48 83 ec 08          	sub    $0x8,%rsp
    1234:	48 8d 1d 49 2e 00 00 	lea    0x2e49(%rip),%rbx        # 4084 <tpool+0x4>
    123b:	48 8d ab 00 06 00 00 	lea    0x600(%rbx),%rbp
    1242:	eb 09                	jmp    124d <join+0x1f>
    1244:	48 83 c3 18          	add    $0x18,%rbx
    1248:	48 39 eb             	cmp    %rbp,%rbx
    124b:	74 1b                	je     1268 <join+0x3a>
    124d:	83 3b 01             	cmpl   $0x1,(%rbx)
    1250:	75 f2                	jne    1244 <join+0x16>
    1252:	48 8b 7b 04          	mov    0x4(%rbx),%rdi
    1256:	be 00 00 00 00       	mov    $0x0,%esi
    125b:	e8 00 fe ff ff       	call   1060 <pthread_join@plt>
    1260:	c7 03 02 00 00 00    	movl   $0x2,(%rbx)
    1266:	eb dc                	jmp    1244 <join+0x16>
    1268:	48 83 c4 08          	add    $0x8,%rsp
    126c:	5b                   	pop    %rbx
    126d:	5d                   	pop    %rbp
    126e:	c3                   	ret

000000000000126f <cleanup>:
    126f:	48 83 ec 08          	sub    $0x8,%rsp
    1273:	b8 00 00 00 00       	mov    $0x0,%eax
    1278:	e8 b1 ff ff ff       	call   122e <join>
    127d:	48 83 c4 08          	add    $0x8,%rsp
    1281:	c3                   	ret

0000000000001282 <main>:
    1282:	53                   	push   %rbx
    1283:	48 8d 1d f5 fe ff ff 	lea    -0x10b(%rip),%rbx        # 117f <Tsum>
    128a:	48 89 df             	mov    %rbx,%rdi
    128d:	e8 13 ff ff ff       	call   11a5 <create>
    1292:	48 89 df             	mov    %rbx,%rdi
    1295:	e8 0b ff ff ff       	call   11a5 <create>
    129a:	b8 00 00 00 00       	mov    $0x0,%eax
    129f:	e8 8a ff ff ff       	call   122e <join>
    12a4:	48 8b 35 b5 2d 00 00 	mov    0x2db5(%rip),%rsi        # 4060 <sum>
    12ab:	48 8d 3d 72 0d 00 00 	lea    0xd72(%rip),%rdi        # 2024 <_IO_stdin_used+0x24>
    12b2:	b8 00 00 00 00       	mov    $0x0,%eax
    12b7:	e8 74 fd ff ff       	call   1030 <printf@plt>
    12bc:	b8 00 00 00 00       	mov    $0x0,%eax
    12c1:	5b                   	pop    %rbx
    12c2:	c3                   	ret

Disassembly of section .fini:

00000000000012c4 <_fini>:
    12c4:	f3 0f 1e fa          	endbr64
    12c8:	48 83 ec 08          	sub    $0x8,%rsp
    12cc:	48 83 c4 08          	add    $0x8,%rsp
    12d0:	c3                   	ret
